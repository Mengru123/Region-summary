## Generate indicators for the region summary view, given the mapping file provided by Guido ####
library(dplyr) # pipe
library(plyr)
library(reshape2)
library(ggplot2)
library(tidyr)
library(gridExtra) #for ggplot that can display multiple plot together
library(tmap) # use for mapping
library(rgdal) # use for mapping
options("digits" = 12)
# read tables and prepare the one census.data  table containing raw number at 4 different geo divisions (cd,csd,ct,da) ####
setwd("C:/Users/myuan/Google Drive/1. Practicum/3. Notes/10. Region summary data/Inidcators")
#setwd("D:/Google Drive_MR/1. Practicum/3. Notes/10. Region summary data/Inidcators") # home computer
cd.data <-read.csv("census_data_2016/nFzbbLDEVuPz11pLQ_data_CD.csv", header = TRUE) # census data at CD level
cd.in <-read.csv("census_data_2016/income_cutof_pre/BGjxddMe_data_CD.csv",header = TRUE) # low-income cut-off prevalence
cd.totalpop <-read.csv("census_data_2016/total_population/fi3xBCGF33oxEm_data_CD.csv",header = TRUE) # totalpopulation
colnames.totpop <- c("COL0", "totalpopulation","totalpop_0_14","totalpop_15_64","totalpop_65+")
colnames(cd.totalpop) <-colnames.totpop
cd.other3<- read.csv("census_data_2016/immigration, family structure, housing/Q71kmE8NAyfgoH_data_CD.csv", header = TRUE) # immigrants,family structure, housing indicators
cd.other3.names <- read.delim("census_data_2016/immigration, family structure, housing/Q71kmE8NAyfgoH_header_CD.txt", stringsAsFactors = FALSE)
cd.other3.names <- cd.other3.names[-1, ]
colnames.other3<-c("COL0",
"COL1 - Households by type / Total - Private households by household type - 100% data",
"COL2 - Households by type / Total - Private households by household type - 100% data / One-census-family households",
"COL3 - Households by type / Total - Private households by household type - 100% data / One-census-family households / Without children in a census family",
"COL4 - Households by type / Total - Private households by household type - 100% data / One-census-family households / With children in a census family",
"COL5 - Households by type / Total - Private households by household type - 100% data / Multiple-census-family households",
"COL6 - Households by type / Total - Private households by household type - 100% data / Non-census-family households",
"COL7 - Households by type / Total - Private households by household type - 100% data / Non-census-family households / One-person households",
"COL8 - Households by type / Total - Private households by household type - 100% data / Non-census-family households / Two-or-more person non-census-family households",
"COL9 - Immigration - Total Sex / Total - Citizenship for the population in private households - 25% sample data",
"COL10 - Immigration - Total Sex / Total - Citizenship for the population in private households - 25% sample data / Canadian citizens",
"COL11 - Immigration - Total Sex / Total - Citizenship for the population in private households - 25% sample data / Not Canadian citizens",
"COL12 - Immigration - Total Sex / Total - Immigrant status and period of immigration for the population in private households - 25% sample data",
"COL13 - Immigration - Total Sex / Total - Immigrant status and period of immigration for the population in private households - 25% sample data / Non-immigrants",
"COL14 - Immigration - Total Sex / Total - Immigrant status and period of immigration for the population in private households - 25% sample data / Immigrants",
"COL15 - Immigration - Total Sex / Total - Immigrant status and period of immigration for the population in private households - 25% sample data / Non-permanent residents",
"COL16 - Immigration - Total Sex / Total - Citizenship for the population in private households - 25% sample data / Canadian citizens / Canadian citizens aged under 18",
"COL17 - Immigration - Total Sex / Total - Citizenship for the population in private households - 25% sample data / Canadian citizens / Canadian citizens aged 18 and over",
"COL18 - Housing - Total Sex / Total - Private households by tenure - 25% sample data",
"COL19 - Housing - Total Sex / Total - Private households by tenure - 25% sample data / Owner",
"COL20 - Housing - Total Sex / Total - Private households by tenure - 25% sample data / Renter",
"COL21 - Housing - Total Sex / Total - Private households by tenure - 25% sample data / Band housing",
"COL22 - Housing - Total Sex / Total -  Owner and tenant households with household total income greater than zero, in non-farm, non-reserve private dwellings by shelter-cost-to-income ratio - 25% sample data",
"COL23 - Housing - Total Sex / Total -  Owner and tenant households with household total income greater than zero, in non-farm, non-reserve private dwellings by shelter-cost-to-income ratio - 25% sample data / Spending less than 30% of income on shelter costs",
"COL24 - Housing - Total Sex / Total -  Owner and tenant households with household total income greater than zero, in non-farm, non-reserve private dwellings by shelter-cost-to-income ratio - 25% sample data / Spending 30% or more of income on shelter costs"
)
colnames(cd.other3) <- colnames.other3
cd.data <- cd.data[, -c(2:5)]
cd.data$type <- "CD"
cd.data <-join_all(list(cd.data, cd.in, cd.totalpop, cd.other3),by = "COL0",type = 'full')
rm(cd.in);rm(cd.totalpop);rm(cd.other3); rm(cd.other3.names)
csd.data <- read.csv("census_data_2016/E8v0huQ0frN4m_data_CSD.csv", header = TRUE)
csd.data <- csd.data[, -c(2:5)]
csd.data$type <- "CSD"
csd.in <-read.csv("census_data_2016/income_cutof_pre/MtTcrBvBmKMcMe_data_CSD.csv",header = TRUE) # low-income cut-off prevalence
csd.totalpop <-read.csv("census_data_2016/total_population/k2Tb5LTN4ON_data_CSD.csv",header = TRUE) # totalpopulation
colnames(csd.totalpop) <- colnames.totpop
csd.other3<- read.csv("census_data_2016/immigration, family structure, housing/wURdDj13eJ_data_CSD.csv", header = TRUE)
csd.other3.names <- read.delim("census_data_2016/immigration, family structure, housing/wURdDj13eJ_header_CSD.txt", stringsAsFactors = FALSE)
csd.other3.names <- csd.other3.names[-1, ]
colnames(csd.other3) <- colnames.other3
csd.data <-join_all(list(csd.data, csd.in, csd.totalpop, csd.other3),by = "COL0",type = 'full')
rm(csd.in);rm(csd.totalpop);rm(csd.other3); rm(csd.other3.names)
ct.data <- read.csv("census_data_2016/G8iUTCA6zplcndk_data_CT.csv", header = TRUE)
ct.data <- ct.data[, -c(2:4)]
ct.data$type <- "CT"
ct.in <-read.csv("census_data_2016/income_cutof_pre/H3yaFrFVGjHuc_data_CT.csv",header = TRUE) # low-income cut-off prevalence
ct.totalpop <-read.csv("census_data_2016/total_population/swC9HfRqADoe_data_CT.csv",header = TRUE) # totalpopulation
colnames(ct.totalpop) <-colnames.totpop
ct.other3<- read.csv("census_data_2016/immigration, family structure, housing/b7pvli7FLB43i_data_CT.csv", header = TRUE)
ct.other3.names <- read.delim("census_data_2016/immigration, family structure, housing/b7pvli7FLB43i_header_CT.txt", stringsAsFactors = FALSE)
ct.other3.names <- ct.other3.names[-1, ]
colnames(ct.other3) <- colnames.other3
ct.data <- join_all(list(ct.data, ct.in, ct.totalpop,ct.other3),by = "COL0",type = 'full')
rm(ct.in);rm(ct.totalpop);rm(ct.other3); rm(ct.other3.names)
da.data <- read.csv("census_data_2016/zngeryB53_data_DA.csv", header = TRUE)
da.data <- da.data[, -c(2:4)]
da.data$type <- "DA"
da.in <-read.csv("census_data_2016/income_cutof_pre/ULkBM9b67fy_data_DA.csv",header = TRUE) # low-income cut-off prevalence
da.totalpop <-read.csv("census_data_2016/total_population/ErO0Imol3vrRjoi_data_DA.csv",header = TRUE) # totalpopulation
colnames(da.totalpop) <-colnames.totpop
da.other3<- read.csv("census_data_2016/immigration, family structure, housing/6IOEpi8povq3vI66_data_DA.csv", header = TRUE)
da.other3.names <- read.delim("census_data_2016/immigration, family structure, housing/6IOEpi8povq3vI66_header_DA.txt", stringsAsFactors = FALSE)
da.other3.names <- da.other3.names[-1, ]
colnames(da.other3) <- colnames.other3
da.data <-join_all(list(da.data, da.in, da.totalpop,da.other3),by = "COL0",type = 'full')
rm(da.in);rm(da.totalpop);rm(da.other3); rm(da.other3.names);rm(colnames.other3);rm(colnames.totpop)
da.data <- da.data[da.data$COL0 > 2500, ]
col.names <-c("census_id","Male_total","Male_0_14","Male_0_4", "Male_5_9","Male_10_14","Male_15_64","Male_15_19",
"Male_20_24","Male_25_29", "Male_30_34","Male_35_39","Male_40_44","Male_45_49","Male_50_54","Male_55_59",
"Male_60_64","Male_65+","Male_65_69","Male_70_74","Male_75_79","Male_80_84","Male_85+","Male_85_89",
"Male_90_94","Male_95_99","Male_100+","Male_Ave_age","Female_total","Female_0_14","Female_0_4","Female_5_9",
"Female_10_14","Female_15_64","Female_15_19","Female_20_24","Female_25_29","Female_30_34","Female_35_39",
"Female_40_44","Female_45_49","Female_50_54","Female_55_59","Female_60_64","Female_65+","Female_65_69",
"Female_70_74","Female_75_79","Female_80_84","Female_85+","Female_85_89","Female_90_94","Female_95_99",
"Female_100+","Female_Ave_age","lang_total","lang_en_only","lang_fr_only","lang_en_fr","lang_nen_nfr",
"lowincome_total","lowincome_0_17","Edu_total","Edu_lowhighs","Edu_highsch","Edu_postse","Labor_total",
"Labor_inforced","Labor_employed","Labor_unemployed","Labor_notinfor","comnu_total","com_bycardriver",
"com_bycarpassenger","com_ptransit","com_walk","com_bicycle","com_other","census_type","lowincome_prevalence_total",
"lowincome_prevalence_0_17")
colnames(cd.data)[1:81] <-col.names ;colnames(csd.data)[1:81] <-col.names
colnames(ct.data)[1:81] <- col.names;colnames(da.data)[1:81] <- col.names
census.data <- do.call("rbind", list(cd.data, csd.data, ct.data, da.data))
rm(cd.data);rm(csd.data);rm(ct.data);rm(da.data); rm(col.names)
# don't have the 1-year age distribution from the census,
# so:calculate the denominator reversely: number of low-income pps0-17/prevalence of low-income0-17 (obtained from census)
census.data$lowincome_denominator_0_17 <- census.data$lowincome_0_17 / (census.data$lowincome_prevalence_0_17 / 100)
census.data$lowincome_denominator_total <-census.data$lowincome_total / (census.data$lowincome_prevalence_total /100)
View(census.data)
map.table.clsc <-read.csv("census_data_2016/mapping_tables/clsc_census_mapping_gd.csv",header = TRUE) # mapping table btw census and CLSC, table obtained from Guido
# map.table.rss<- read.csv("census_data_2016/mapping_tables/rss_to_census_gd.csv",header = TRUE) # mapping table btw census and rss, table obtained from Guido
# map.table.rss<-map.table.rss[, -1]
# clsc to rss mapping
# clsc.shp <-readOGR("5. CLSC_boundary_2016", "Territoires_CLSC_2017", encoding = "UTF-8")
# map.table.clsc.to.rss<-clsc.shp@data [,c(1,5)]
# map.table.clsc.to.rss$CLSC_code<-as.numeric(as.character(map.table.clsc.to.rss$CLSC_code))
# map.table.clsc.to.rss$RSS_code<-as.numeric(as.character(map.table.clsc.to.rss$RSS_code))
map_to_hr<-function(dataset){
a<-merge(dataset, census.data, by="census_id")
print(nrow(a[a$census_type.x != a$census_type.y, ]))
a<-a[, -c(1, 3, 81)]
a}
map.clsc<-map_to_hr(map.table.clsc); rm(map.table.clsc)
#map.rss<- map_to_hr(map.table.rss) ; rm(map.table.rss)
group_to_HR <- function(dataset, hr_code) {  # group to health regions
t<- dataset %>%
group_by_(hr_code) %>%
summarise_all(funs(sum(., na.rm = TRUE)))
print(all.equal(unique(t[,1]), t[,1]))
return(t)
}
clsc.data <- group_to_HR(map.clsc, as.character(colnames(map.clsc)[1])) ;rm(map.clsc)
View(clsc.data)
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2016/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2016/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
df_read = function(df.csv, df.txt) {
df = read.csv(df.csv, header = TRUE, stringsAsFactors = FALSE)
df.txt = read.delim(df.txt, stringsAsFactors = FALSE)[-1,] # remove the title line in the name file
for (i in 1:length(df.txt)) {
df.txt = gsub(paste('COL', i, ' - ', sep = '')|paste('COL', i, '  - ', sep = ''), '', df.txt)
}
colnames(df) = append(df.txt, "census_id", after = 0 )
return(df)
}
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
df_read = function(df.csv, df.txt) {
df = read.csv(df.csv, header = TRUE, stringsAsFactors = FALSE)
df.txt = read.delim(df.txt, stringsAsFactors = FALSE)[-1,] # remove the title line in the name file
for (i in 1:length(df.txt)) {
t1 = paste('COL', i, ' - ', '|', 'COL', i, '  - ',sep = '')
df.txt = gsub(pattern = t1, '', df.txt)
}
colnames(df) = append(df.txt, "census_id", after = 0 )
return(df)
}
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
df= read.delim("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt", stringsAsFactors = FALSE)
df
View(df)
df= read.delim("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt", stringsAsFactors = FALSE, header = FALSE)
View(df)
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
View(df)
df[-1,]
df=df[-1,]
df=list(df[-1,])
df
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
View(ca.data.2006)
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
View(ca.data.2006)
source('function.R')
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
View(ca.data.2006)
View(ca.data.2006)
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
View(ca.data.2006)
ca.data.2006 = df_combine("Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.csv",
"Data/census_data_2006/Canada_wise_data_by_prov/retrieveCensusPROV_CA.txt")
ca.data.2006$year = 2006
View(ca.data.2006)
names(ca.data.2006)
